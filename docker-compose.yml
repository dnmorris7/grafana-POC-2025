version: '3.8'

services:
  # TimescaleDB for time-series data storage
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: timescaledb
    environment:
      POSTGRES_DB: metrics
      POSTGRES_USER: prometheus
      POSTGRES_PASSWORD: prometheus_password
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./timescaledb/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - metrics-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - metrics-network
    depends_on:
      - timescaledb

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3090:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - metrics-network
    depends_on:
      - prometheus
      - timescaledb

  # RabbitMQ with management plugin
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_PROMETHEUS_PLUGIN_ENABLED: true
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - metrics-network

  # RabbitMQ Prometheus Exporter
  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter:latest
    container_name: rabbitmq-exporter
    ports:
      - "9419:9419"
    environment:
      RABBIT_URL: http://rabbitmq:15672
      RABBIT_USER: guest
      RABBIT_PASSWORD: guest
      PUBLISH_PORT: 9419
    networks:
      - metrics-network
    depends_on:
      - rabbitmq

  # LLM Metrics Collection Service
  llm-metrics-service:
    build:
      context: ./llm-metrics-service
      dockerfile: Dockerfile
    container_name: llm-metrics-service
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: production
      PROMETHEUS_PORT: 8080
      TIMESCALE_HOST: timescaledb
      TIMESCALE_PORT: 5432
      TIMESCALE_DB: metrics
      TIMESCALE_USER: prometheus
      TIMESCALE_PASSWORD: prometheus_password
      OPENAI_API_KEY: ${OPENAI_API_KEY:-demo_key}
    volumes:
      - ./llm-metrics-service:/app
      - /app/node_modules
    networks:
      - metrics-network
    depends_on:
      - timescaledb
      - prometheus

  # Sample RabbitMQ Producer/Consumer for demo
  rabbitmq-demo:
    build:
      context: ./rabbitmq-demo
      dockerfile: Dockerfile
    container_name: rabbitmq-demo
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    networks:
      - metrics-network
    depends_on:
      - rabbitmq

volumes:
  prometheus_data:
  grafana_data:
  timescaledb_data:
  rabbitmq_data:

networks:
  metrics-network:
    driver: bridge
